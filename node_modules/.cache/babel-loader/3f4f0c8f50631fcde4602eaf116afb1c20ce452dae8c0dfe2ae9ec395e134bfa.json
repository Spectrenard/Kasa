{"ast":null,"code":"var _jsxFileName = \"/Users/Elyesa1/Desktop/Projet 5 - Kasa/my-app/src/components/Equipements/Equipements.jsx\",\n  _s = $RefreshSig$();\n// Equipements.jsx\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Equipements({\n  logementId,\n  data\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); // État pour suivre si le collapse est ouvert ou fermé\n\n  // Filtrer les données pour trouver le logement correspondant à l'ID spécifié\n  const logement = data.find(log => log.id === logementId);\n  if (!logement) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Logement non trouv\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Convertir les équipements en éléments <li>\n  const equipementsList = logement.equipments.map((equipement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: equipement\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n\n  // Fonction pour basculer l'état du collapse ouvert ou fermé\n  const toggleCollapse = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapse-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse-header\",\n      onClick: toggleCollapse,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\xC9quipements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chevron ${isOpen ? \"open\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse-content\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: equipementsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Equipements, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Equipements;\nexport default Equipements;\nvar _c;\n$RefreshReg$(_c, \"Equipements\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Equipements","logementId","data","_s","isOpen","setIsOpen","logement","find","log","id","children","fileName","_jsxFileName","lineNumber","columnNumber","equipementsList","equipments","map","equipement","index","toggleCollapse","className","onClick","_c","$RefreshReg$"],"sources":["/Users/Elyesa1/Desktop/Projet 5 - Kasa/my-app/src/components/Equipements/Equipements.jsx"],"sourcesContent":["// Equipements.jsx\nimport React, { useState } from \"react\";\n\nfunction Equipements({ logementId, data }) {\n  const [isOpen, setIsOpen] = useState(false); // État pour suivre si le collapse est ouvert ou fermé\n\n  // Filtrer les données pour trouver le logement correspondant à l'ID spécifié\n  const logement = data.find((log) => log.id === logementId);\n\n  if (!logement) {\n    return <div>Logement non trouvé</div>;\n  }\n\n  // Convertir les équipements en éléments <li>\n  const equipementsList = logement.equipments.map((equipement, index) => (\n    <li key={index}>{equipement}</li>\n  ));\n\n  // Fonction pour basculer l'état du collapse ouvert ou fermé\n  const toggleCollapse = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"collapse-item\">\n      <div className=\"collapse-header\" onClick={toggleCollapse}>\n        <h3>Équipements</h3>\n        <div className={`chevron ${isOpen ? \"open\" : \"\"}`}>\n          {/* Icône de flèche vers le bas ou vers le haut pour indiquer l'état du collapse */}\n        </div>\n      </div>\n      {/* Condition pour afficher ou masquer le contenu en fonction de l'état du collapse */}\n      {isOpen && (\n        <div className=\"collapse-content\">\n          <ul>{equipementsList}</ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Equipements;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC,UAAU;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMS,QAAQ,GAAGJ,IAAI,CAACK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKR,UAAU,CAAC;EAE1D,IAAI,CAACK,QAAQ,EAAE;IACb,oBAAOP,OAAA;MAAAW,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvC;;EAEA;EACA,MAAMC,eAAe,GAAGT,QAAQ,CAACU,UAAU,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAChEpB,OAAA;IAAAW,QAAA,EAAiBQ;EAAU,GAAlBC,KAAK;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB,CACjC,CAAC;;EAEF;EACA,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3Bf,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEL,OAAA;IAAKsB,SAAS,EAAC,eAAe;IAAAX,QAAA,gBAC5BX,OAAA;MAAKsB,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAEF,cAAe;MAAAV,QAAA,gBACvDX,OAAA;QAAAW,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBf,OAAA;QAAKsB,SAAS,EAAG,WAAUjB,MAAM,GAAG,MAAM,GAAG,EAAG;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELV,MAAM,iBACLL,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAX,QAAA,eAC/BX,OAAA;QAAAW,QAAA,EAAKK;MAAe;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CApCQH,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}